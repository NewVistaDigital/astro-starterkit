
				import createSSRHandler from './entry.mjs';
				export default createSSRHandler({"cacheOnDemandPages":false,"notFoundContent":"<!DOCTYPE html><html lang=\"en\"> <head><!-- Global Metadata --><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"/favicon.svg\"><!-- <meta name=\"generator\" content={Astro.generator} /> --><!-- Font preloads --><!-- <link rel=\"preload\" href=\"/fonts/atkinson-regular.woff\" as=\"font\" type=\"font/woff\" crossorigin />\n<link rel=\"preload\" href=\"/fonts/atkinson-bold.woff\" as=\"font\" type=\"font/woff\" crossorigin /> --><!-- Canonical URL --><link rel=\"canonical\" href=\"https://example.com/404/\"><!-- Primary Meta Tags --><title>NVD Astro Starterkit | NVD Astro Starterkit</title><meta name=\"title\" content=\"NVD Astro Starterkit\"><meta name=\"description\" content=\"This is the default description of this website. Nice!\"><!-- Open Graph / Facebook --><meta property=\"og:type\" content=\"website\"><meta property=\"og:url\" content=\"https://example.com/404/\"><meta property=\"og:title\" content=\"NVD Astro Starterkit\"><meta property=\"og:description\" content=\"This is the default description of this website. Nice!\"><meta property=\"og:image\" content=\"https://example.com/blog-placeholder-1.jpg\"><!-- Twitter --><meta property=\"twitter:card\" content=\"summary_large_image\"><meta property=\"twitter:url\" content=\"https://example.com/404/\"><meta property=\"twitter:title\" content=\"NVD Astro Starterkit\"><meta property=\"twitter:description\" content=\"This is the default description of this website. Nice!\"><meta property=\"twitter:image\" content=\"https://example.com/blog-placeholder-1.jpg\"><script>\n  // import '../../js/darkMode.js';\n\n  const storageKey = 'theme-preference';\n\n  const themeValues = () => {\n    // flip current value\n    theme.value = theme.value === 'light' ? 'dark' : 'light';\n    setPreference();\n  };\n\n  const getColorPreference = () => {\n    if (localStorage.getItem(storageKey))\n      return localStorage.getItem(storageKey);\n    else\n      return window.matchMedia('(prefers-color-scheme: dark)').matches\n        ? 'dark'\n        : 'light';\n  };\n\n  const setPreference = () => {\n    localStorage.setItem(storageKey, theme.value);\n    reflectPreference();\n  };\n\n  const reflectPreference = () => {\n    document.firstElementChild.setAttribute('class', theme.value);\n    document\n      .querySelector('#theme-toggle')\n      ?.setAttribute('aria-label', theme.value);\n  };\n\n  const theme = {\n    value: getColorPreference(),\n  };\n  // set early so no page flashes / CSS is made aware\n  reflectPreference();\n  window.onload = () => {\n    // set on load so screen readers can see latest value on the button\n    reflectPreference();\n    // now this script can find and listen for clicks on the control\n    document\n      .querySelector('#theme-toggle')\n      .addEventListener('click', themeValues);\n  };\n  // sync with system changes\n  window\n    .matchMedia('(prefers-color-scheme: dark)')\n    .addEventListener('change', ({ matches: isDark }) => {\n      theme.value = isDark ? 'dark' : 'light';\n      setPreference();\n    });\n</script><link rel=\"stylesheet\" href=\"/_astro/about.DG017Cmo.css\" />\n<link rel=\"stylesheet\" href=\"/_astro/index.C01GuyUB.css\" /><script type=\"module\">const e=document.querySelectorAll(\"[data-navLink]\");e.forEach(t=>{t.getAttribute(\"href\")===window.location.pathname&&t.setAttribute(\"aria-current\",\"page\")});\n</script></head> <body class=\"bg-white p-4 text-slate-900 transition-colors dark:bg-slate-900 dark:text-white\"> <a href=\"#main-content\" class=\"sr-only focus:not-sr-only active:not-sr-only\">Skip to content</a> <button class=\"theme-toggle\" id=\"theme-toggle\" title=\"Toggles light & dark\" aria-label=\"auto\" aria-live=\"polite\"> <svg class=\"sun-and-moon\" aria-hidden=\"true\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"> <mask class=\"moon\" id=\"moon-mask\"> <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"white\"></rect> <circle cx=\"24\" cy=\"10\" r=\"6\" fill=\"black\"></circle> </mask> <circle class=\"sun\" cx=\"12\" cy=\"12\" r=\"6\" mask=\"url(#moon-mask)\" fill=\"currentColor\"></circle> <g class=\"sun-beams\" stroke=\"currentColor\"> <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line> <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line> <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line> <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line> <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line> <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line> <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line> <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line> </g> </svg> </button> <header class=\"gap-5 p-5 lg:flex\" data-astro-cid-r7uuxm25>  <div class=\"flex w-full items-center justify-between\" data-astro-cid-r7uuxm25> <a class=\"text-xl font-extrabold\" data-astro-cid-r7uuxm25>NVD Astro Starterkit</a> <div class=\"block lg:hidden\" data-astro-cid-r7uuxm25> <button id=\"astronav-menu\" aria-label=\"Toggle Menu\">  <svg class=\"ham hamRotate ham8\" viewBox=\"0 0 100 100\" width=\"40\" onclick=\"this.classList.toggle('active')\" data-astro-cid-r7uuxm25> <path class=\"line top stroke-stone-800 dark:stroke-white\" d=\"m 30,33 h 40 c 3.722839,0 7.5,3.126468 7.5,8.578427 0,5.451959 -2.727029,8.421573 -7.5,8.421573 h -20\" data-astro-cid-r7uuxm25></path> <path class=\"line middle stroke-stone-800 dark:stroke-white\" d=\"m 30,50 h 40\" data-astro-cid-r7uuxm25></path> <path class=\"line bottom stroke-stone-800 dark:stroke-white\" d=\"m 70,67 h -40 c 0,0 -7.5,-0.802118 -7.5,-8.365747 0,-7.563629 7.5,-8.634253 7.5,-8.634253 h 20\" data-astro-cid-r7uuxm25></path> </svg> </button> </div> </div> <nav class=\"astronav-items astronav-toggle hidden lg:flex\">  <ul class=\"flex flex-col lg:flex-row lg:gap-5\" data-astro-cid-r7uuxm25> <li data-astro-cid-r7uuxm25><a href=\"/\" data-navLink data-astro-cid-r7uuxm25 data-astro-cid-ha4pvpxc> Home </a> </li> <li data-astro-cid-r7uuxm25><a href=\"/blog\" data-navLink data-astro-cid-r7uuxm25 data-astro-cid-ha4pvpxc> Blog </a> </li> <li data-astro-cid-r7uuxm25><a href=\"/about\" data-navLink data-astro-cid-r7uuxm25 data-astro-cid-ha4pvpxc> About </a> </li> <li data-astro-cid-r7uuxm25> <menu class=\"astronav-dropdown group\" aria-expanded=\"false\"> <button class=\"flex items-center\" data-astro-cid-r7uuxm25> <span data-astro-cid-r7uuxm25> Dropdown </span> <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"3\" stroke=\"currentColor\" class=\"mt-0.5 h-3 w-3 group-open:rotate-180\" data-astro-cid-r7uuxm25> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\" data-astro-cid-r7uuxm25></path> </svg> </button> <div class=\"astronav-dropdown dropdown-toggle hidden relative\" aria-expanded=\"false\">  <div class=\"absolute top-0\" data-astro-cid-r7uuxm25> <ul data-astro-cid-r7uuxm25> <li data-astro-cid-r7uuxm25>Menu 1</li> <li data-astro-cid-r7uuxm25>Menu 2</li> <li data-astro-cid-r7uuxm25>Menu 3</li> </ul> </div>  </div> </menu> </li> <li data-astro-cid-r7uuxm25><a href=\"/contact\" data-navLink data-astro-cid-r7uuxm25 data-astro-cid-ha4pvpxc> Contact </a> </li> </ul>  </nav>  <script>(function(){const closeOnClick = false;\n\n[\"DOMContentLoaded\", \"astro:after-swap\"].forEach((event) => {\n  document.addEventListener(event, addListeners);\n});\n\n// Function to clone and replace elements\nfunction cloneAndReplace(element) {\n  const clone = element.cloneNode(true);\n  element.parentNode.replaceChild(clone, element);\n}\n\nfunction addListeners() {\n  // Clean up existing listeners\n  const oldMenuButton = document.getElementById(\"astronav-menu\");\n  if (oldMenuButton) {\n    cloneAndReplace(oldMenuButton);\n  }\n\n  const oldDropdownMenus = document.querySelectorAll(\".astronav-dropdown\");\n  oldDropdownMenus.forEach((menu) => {\n    cloneAndReplace(menu);\n  });\n\n  // Mobile nav toggle\n  const menuButton = document.getElementById(\"astronav-menu\");\n  menuButton && menuButton.addEventListener(\"click\", toggleMobileNav);\n\n  // Dropdown menus\n  const dropdownMenus = document.querySelectorAll(\".astronav-dropdown\");\n  dropdownMenus.forEach((menu) => {\n    const button = menu.querySelector(\"button\");\n    button &&\n      button.addEventListener(\"click\", (event) =>\n        toggleDropdownMenu(event, menu, dropdownMenus)\n      );\n\n    // Handle Submenu Dropdowns\n    const dropDownSubmenus = menu.querySelectorAll(\n      \".astronav-dropdown-submenu\"\n    );\n\n    dropDownSubmenus.forEach((submenu) => {\n      const submenuButton = submenu.querySelector(\"button\");\n      submenuButton &&\n        submenuButton.addEventListener(\"click\", (event) => {\n          event.stopImmediatePropagation();\n          toggleSubmenuDropdown(event, submenu);\n        });\n    });\n  });\n\n  // Clicking away from dropdown will remove the dropdown class\n  document.addEventListener(\"click\", closeAllDropdowns);\n\n  if (closeOnClick) {\n    handleCloseOnClick();\n  }\n}\n\nfunction toggleMobileNav() {\n  [...document.querySelectorAll(\".astronav-toggle\")].forEach((el) => {\n    el.classList.toggle(\"hidden\");\n  });\n}\n\nfunction toggleDropdownMenu(event, menu, dropdownMenus) {\n  toggleMenu(menu);\n\n  // Close one dropdown when selecting another\n  Array.from(dropdownMenus)\n    .filter((el) => el !== menu && !menu.contains(el))\n    .forEach(closeMenu);\n\n  event.stopPropagation();\n}\n\nfunction toggleSubmenuDropdown(event, submenu) {\n  event.stopPropagation();\n  toggleMenu(submenu);\n\n  // Close sibling submenus at the same nesting level\n  const siblingSubmenus = submenu\n    .closest(\".astronav-dropdown\")\n    .querySelectorAll(\".astronav-dropdown-submenu\");\n  Array.from(siblingSubmenus)\n    .filter((el) => el !== submenu && !submenu.contains(el))\n    .forEach(closeMenu);\n}\n\nfunction closeAllDropdowns(event) {\n  const dropdownMenus = document.querySelectorAll(\".dropdown-toggle\");\n  const dropdownParent = document.querySelectorAll(\n    \".astronav-dropdown, .astronav-dropdown-submenu\"\n  );\n  const isButtonInsideDropdown = [\n    ...document.querySelectorAll(\n      \".astronav-dropdown button, .astronav-dropdown-submenu button, #astronav-menu\"\n    ),\n  ].some((button) => button.contains(event.target));\n  if (!isButtonInsideDropdown) {\n    dropdownMenus.forEach((d) => {\n      // console.log(\"I ran\", d);\n      // if (!d.contains(event.target)) {\n      d.classList.remove(\"open\");\n      d.removeAttribute(\"open\");\n      d.classList.add(\"hidden\");\n      // }\n    });\n    dropdownParent.forEach((d) => {\n      d.classList.remove(\"open\");\n      d.removeAttribute(\"open\");\n      d.setAttribute(\"aria-expanded\", \"false\");\n    });\n  }\n}\n\nfunction toggleMenu(menu) {\n  menu.classList.toggle(\"open\");\n  const expanded = menu.getAttribute(\"aria-expanded\") === \"true\";\n  menu.setAttribute(\"aria-expanded\", expanded ? \"false\" : \"true\");\n  menu.hasAttribute(\"open\")\n    ? menu.removeAttribute(\"open\")\n    : menu.setAttribute(\"open\", \"\");\n\n  const dropdownToggle = menu.querySelector(\".dropdown-toggle\");\n  const dropdownExpanded = dropdownToggle.getAttribute(\"aria-expanded\");\n  dropdownToggle.classList.toggle(\"hidden\");\n  dropdownToggle.setAttribute(\n    \"aria-expanded\",\n    dropdownExpanded === \"true\" ? \"false\" : \"true\"\n  );\n}\n\nfunction closeMenu(menu) {\n  // console.log(\"closing\", menu);\n  menu.classList.remove(\"open\");\n  menu.removeAttribute(\"open\");\n  menu.setAttribute(\"aria-expanded\", \"false\");\n  const dropdownToggles = menu.querySelectorAll(\".dropdown-toggle\");\n  dropdownToggles.forEach((toggle) => {\n    toggle.classList.add(\"hidden\");\n    toggle.setAttribute(\"aria-expanded\", \"false\");\n  });\n}\n\nfunction handleCloseOnClick() {\n  const navMenuItems = document.querySelector(\".astronav-items\");\n  const navToggle = document.getElementById(\"astronav-menu\");\n  const navLink = navMenuItems && navMenuItems.querySelectorAll(\"a\");\n\n  const MenuIcons = navToggle.querySelectorAll(\".astronav-toggle\");\n\n  navLink &&\n    navLink.forEach((item) => {\n      item.addEventListener(\"click\", () => {\n        navMenuItems?.classList.add(\"hidden\");\n        MenuIcons.forEach((el) => {\n          el.classList.toggle(\"hidden\");\n        });\n      });\n    });\n}\n})();</script> </header>   <main id=\"#main-content\">  <section class=\"bg-white dark:bg-gray-900\"> <div class=\"mx-auto max-w-screen-xl px-4 py-8 lg:px-6 lg:py-16\"> <div class=\"mx-auto max-w-screen-sm text-center\"> <h1 class=\"text-primary-600 dark:text-primary-500 mb-4 text-7xl font-extrabold tracking-tight lg:text-9xl\">\n404\n</h1> <p class=\"mb-4 text-3xl font-bold tracking-tight text-gray-900 dark:text-white md:text-4xl\">\nPage not found...\n</p> <p class=\"mb-4 text-lg font-light text-gray-500 dark:text-gray-400\">\nSorry, we can't find what you're looking for. You'll find lots to\n          explore on the home page.\n</p> <a href=\"#\" class=\"btn-primary\">Back to Homepage</a> </div> </div> </section>  </main> <footer class=\"mt-8 text-center text-sm\"> <p>&copy; 2024 NVD Astro Starterkit. All rights reserved.</p> <p class=\"mb-3 text-center text-xs text-slate-500 dark:text-slate-500\">\nBuilt from scratch with <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\" class=\"-mt-1 inline-block\"><path fill=\"none\" stroke=\"currentColor\" stroke-dasharray=\"30\" stroke-dashoffset=\"30\" stroke-linecap=\"round\" stroke-width=\"2\" d=\"M12 8C12 8 12 8 12.7578 7C13.6343 5.84335 14.9398 5 16.5 5C18.9853 5 21 7.01472 21 9.5C21 10.4251 20.7209 11.285 20.2422 12C19.435 13.206 12 21 12 21M12 8C12 8 12 8 11.2422 7C10.3657 5.84335 9.06021 5 7.5 5C5.01472 5 3 7.01472 3 9.5C3 10.4251 3.27914 11.285 3.75777 12C4.56504 13.206 12 21 12 21\"><animate fill=\"freeze\" repeatCount=\"indefinite\" attributeName=\"stroke-dashoffset\" dur=\"7s\" values=\"0;30;0;0;0;0;0;0;0\"></animate></path></svg> by <a href=\"https://newvistadigital.com/?utm_source=nvd-astro-starterkit\" target=\"_blank\" class=\"underline transition-colors hover:text-black\">New Vista Digital</a> </p> </footer> </body></html>"});
				export const config = { name: "Astro SSR", generator: "@astrojs/netlify@5.2.0", path: "/*", preferStatic: true };
			